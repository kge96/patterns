package generanting.prototype;

/**
 * Прототип — это порождающий паттерн проектирования,
 * который позволяет копировать объекты, не вдаваясь
 * в подробности их реализации.
 *
 * Паттерн Прототип поручает создание копий самим копируемым объектам.
 * Он вводит общий интерфейс для всех объектов, поддерживающих клонирование.
 * Это позволяет копировать объекты, не привязываясь к их конкретным классам.
 * Обычно такой интерфейс имеет всего один метод clone.
 *
 * Объект, который копируют, называется прототипом (откуда и название паттерна).
 * Когда объекты программы содержат сотни полей и тысячи возможных конфигураций,
 * прототипы могут служить своеобразной альтернативой созданию подклассов.
 *
 * Все классы—Прототипы имеют общий интерфейс. Поэтому вы можете копировать объекты,
 * не обращая внимания на их конкретные типы и всегда быть уверены, что получите точную копию.
 * Клонирование совершается самим объектом-прототипам, что позволяет ему скопировать значения всех полей, даже приватных.
 * */